Line,Code,Execution Count
1,"const transactions = JSON.parse(localStorage.getItem(""transactions"")) || [];",3
2,No Code,4
3,"const formatter = new Intl.NumberFormat(""en-US"", {",4
4,"style: ""currency"",",4
5,"currency: ""USD"",",6
6,"signDisplay: ""always"",",6
7,},6
8,);,4
9,No Code,4
10,"const list = document.getElementById(""transactionList"");",3
11,"const form = document.getElementById(""transactionForm"");",3
12,"const statusText = document.getElementById(""status"");",3
13,"const balance = document.getElementById(""balance"");",3
14,"const income = document.getElementById(""income"");",3
15,"const expense = document.getElementById(""expense"");",3
16,No Code,3
17,"form.addEventListener(""submit"", addTransaction);",3
18,No Code,10
19,function formatCurrency(value) {,14
20,if (value === 0) {,14
21,"return formatter.format(0).replace(/^[+-]/, """");",17
22,},14
23,return formatter.format(value);,14
24,},4
25,No Code,5
26,function updateTotal() {,5
27,const incomeTotal = transactions,6
28,.filter((trx),5
29,"=> trx.type === ""income"")",5
30,".reduce((total, trx) => total + trx.amount, 0);",5
31,No Code,6
32,const expenseTotal = transactions,6
33,".filter((trx) => trx.type === ""expense"")",5
34,".reduce((total, trx) => total + trx.amount, 0);",5
35,No Code,5
36,const balanceTotal = incomeTotal - expenseTotal;,5
37,No Code,5
38,"balance.textContent = formatCurrency(balanceTotal).replace(/^\+/, """");",5
39,income.textContent = formatCurrency(incomeTotal);,5
40,expense.textContent = formatCurrency(expenseTotal * -1);,3
41,},5
42,No Code,5
43,function renderList() {,5
44,"list.innerHTML = """";",5
45,No Code,6
46,"statusText.textContent = """";",6
47,if (transactions.length === 0) {,6
48,"statusText.textContent = ""No transactions."";",6
49,return;,6
50,},7
51,No Code,7
52,"transactions.forEach(({ id, name, amount, date, type }",7
53,) => {,7
54,"const sign = ""income"" === type ? 1 : -1;",7
55,No Code,7
56,"const li = document.createElement(""li"");",7
57,No Code,7
58,li.innerHTML = `,7
59,"<div class=""name"">",7
60,<h4>${name}</h4>,7
61,<p>${new Date(date).toLocaleDateString()}</p>,7
62,</div>,7
63,No Code,7
64,"<div class=""amount ${type}"">",7
65,<span>${formatCurrency(amount * sign)}</span>,7
66,</div>,7
67,No Code,7
68,"<div class=""action"" onclick=""deleteTransaction(${id})"">",7
69,"<svg xmlns=""http://www.w3.org/2000/svg"" fill=""none"" viewBox=""0 0 24 24"" stroke-width=""1.5"" stroke=""currentColor"">",7
70,"<path stroke-linecap=""round"" stroke-linejoin=""round"" d=""M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />",7
71,</svg>,7
72,</div>,10
73,`;,10
74,No Code,9
75,list.appendChild(li);,6
76,});,6
77,},6
78,No Code,6
79,renderList();,3
80,updateTotal();,3
81,No Code,3
82,function deleteTransaction(id) {,3
83,const index = transactions.findIndex((trx) => trx.id === id);,3
84,"transactions.splice(index, 1);",3
85,No Code,3
86,updateTotal();,3
87,saveTransactions();,3
88,renderList();,4
89,},4
90,No Code,4
91,function addTransaction(e) {,4
92,e.preventDefault();,4
93,No Code,4
94,const formData = new FormData(this);,4
95,No Code,4
96,transactions.push({,4
97,"id: transactions.length + 1,",4
98,"name: formData.get(""name""),",4
99,"amount: parseFloat(formData.get(""amount"")",4
100,"),",4
101,"date: new Date(formData.get(""date"")),",3
102,"type: ""on"" === formData.get(""type"") ? ""income"" : ""expense"",",2
103,});,2
104,No Code,2
105,this.reset();,2
106,No Code,2
107,updateTotal();,1
108,saveTransactions();,2
109,renderList();,2
110,},2
111,No Code,2
112,function saveTransactions() {,2
113,"transactions.sort((a, b) => new Date(b.date) - new Date(a.date));",1
