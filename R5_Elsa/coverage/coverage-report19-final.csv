Line,Code,Execution Count
1,"const transactions = JSON.parse(localStorage.getItem(""transactions"")) || [];",3
2,No Code,4
3,"const formatter = new Intl.NumberFormat(""en-US"", {",4
4,"style: ""currency"",",4
5,"currency: ""USD"",",6
6,"signDisplay: ""always"",",6
7,},6
8,);,4
9,No Code,4
10,"const list = document.getElementById(""transactionList"");",3
11,"const form = document.getElementById(""transactionForm"");",3
12,"const statusText = document.getElementById(""status"");",3
13,"const balance = document.getElementById(""balance"");",3
14,"const income = document.getElementById(""income"");",3
15,"const expense = document.getElementById(""expense"");",3
16,No Code,3
17,"form.addEventListener(""submit"", addTransaction);",3
18,No Code,21
19,function formatCurrency(value) {,25
20,if (value === 0) {,25
21,"return formatter.format(0).replace(/^[+-]/, """");",39
22,},36
23,return formatter.format(value);,36
24,},4
25,No Code,7
26,function updateTotal() {,7
27,const incomeTotal = transactions,13
28,.filter((trx),10
29,"=> trx.type === ""income"")",7
30,".reduce((total, trx) => total + trx.amount, 0);",7
31,No Code,13
32,const expenseTotal = transactions,10
33,".filter((trx) => trx.type === ""expense"")",7
34,".reduce((total, trx) => total + trx.amount, 0);",7
35,No Code,7
36,const balanceTotal = incomeTotal - expenseTotal;,7
37,No Code,7
38,"balance.textContent = formatCurrency(balanceTotal).replace(/^\+/, """");",7
39,income.textContent = formatCurrency(incomeTotal);,7
40,expense.textContent = formatCurrency(expenseTotal * -1);,3
41,},7
42,No Code,7
43,function renderList() {,7
44,"list.innerHTML = """";",7
45,No Code,8
46,"statusText.textContent = """";",8
47,if (transactions.length === 0) {,8
48,"statusText.textContent = ""No transactions."";",11
49,return;,10
50,},16
51,No Code,22
52,"transactions.forEach(({ id, name, amount, date, type }",16
53,) => {,16
54,"const sign = ""income"" === type ? 1 : -1;",16
55,No Code,16
56,"const li = document.createElement(""li"");",16
57,No Code,16
58,li.innerHTML = `,16
59,"<div class=""name"">",16
60,<h4>${name}</h4>,16
61,<p>${new Date(date).toLocaleDateString()}</p>,16
62,</div>,16
63,No Code,16
64,"<div class=""amount ${type}"">",16
65,<span>${formatCurrency(amount * sign)}</span>,16
66,</div>,16
67,No Code,16
68,"<div class=""action"" onclick=""deleteTransaction(${id})"">",16
69,"<svg xmlns=""http://www.w3.org/2000/svg"" fill=""none"" viewBox=""0 0 24 24"" stroke-width=""1.5"" stroke=""currentColor"">",16
70,"<path stroke-linecap=""round"" stroke-linejoin=""round"" d=""M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"" />",16
71,</svg>,16
72,</div>,19
73,`;,19
74,No Code,13
75,list.appendChild(li);,6
76,});,6
77,},6
78,No Code,6
79,renderList();,3
80,updateTotal();,3
81,No Code,3
82,function deleteTransaction(id) {,3
83,const index = transactions.findIndex((trx) => trx.id === id);,3
84,"transactions.splice(index, 1);",3
85,No Code,3
86,updateTotal();,3
87,saveTransactions();,3
88,renderList();,6
89,},6
90,No Code,6
91,function addTransaction(e) {,6
92,e.preventDefault();,6
93,No Code,6
94,const formData = new FormData(this);,6
95,No Code,6
96,transactions.push({,6
97,"id: transactions.length + 1,",6
98,"name: formData.get(""name""),",9
99,"amount: parseFloat(formData.get(""amount"")",6
100,"),",6
101,"date: new Date(formData.get(""date"")),",5
102,"type: ""on"" === formData.get(""type"") ? ""income"" : ""expense"",",4
103,});,4
104,No Code,4
105,this.reset();,4
106,No Code,4
107,updateTotal();,1
108,saveTransactions();,4
109,renderList();,9
110,},4
111,No Code,4
112,function saveTransactions() {,4
113,"transactions.sort((a, b) => new Date(b.date) - new Date(a.date));",1
