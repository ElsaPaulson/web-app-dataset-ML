Line,Code,Execution Count
1,/*!,3
2,* Vue.js v1.0.28,3
3,* (c) 2016 Evan You,3
4,* Released under the MIT License.,3
5,*/,3
6,"!function(t,e){""object""==typeof exports&&""undefined""!=typeof module?module.exports=e():""function""==typeof define&&define.amd?define(e):t.Vue=e()}(this,function(){""use strict"";function t(e,n,r){if(i(e,n))return void(e[n]=r);if(e._isVue)return void t(e._data,n,r);var s=e.__ob__;if(!s)return void(e[n]=r);if(s.convert(n,r),s.dep.notify(),s.vms)for(var o=s.vms.length;o--;){var a=s.vms[o];a._proxy(n),a._digest()}",5192
7,"return r}function e(t,e)",3394
8,"{if(i(t,e)){delete t[e];var n=t.__ob__;if(!n)return void(t._isVue&&(delete t._data[e],t._digest()));if(n.dep.notify(),n.vms)for(var r=n.vms.length;r--;){var s=n.vms[r];s._unproxy(e),s._digest()}}}function i(t,e){return Mi.call(t,e)}function n(t){return Wi.test(t)}function r(t){var e=(t+"""").charCodeAt(0);return 36===e||95===e}function s(t){return null==t?"""":t.toString()}function o(t){if(""string""!=typeof t)return t;var e=Number(t);return isNaN(e)?t:e}function a(t){return""true""===t||""false""!==t&&t}function h(t){var e=t.charCodeAt(0),i=t.charCodeAt(t.length-1);return e!==i||34!==e&&39!==e?t:t.slice(1,-1)}function l(t){return t.replace(Vi,c)}function c(t,e){return e?e.toUpperCase():""""}function u(t){return t.replace(Bi,""$1-$2"").replace(Bi,""$1-$2"").toLowerCase()}function f(t){return t.replace(zi,c)}function p(t,e){return function(i){var n=arguments.length;return n?n>1?t.apply(e,arguments):t.call(e,i):t.call(e)}}function d(t,e){e=e||0;for(var i=t.length-e,n=new Array(i);i--;)n[i]=t[i+e];return n}function v(t,e){for(var i=Object.keys(e),n=i.length;n--;)t[i[n]]=e[i[n]];return t}function m(t){return null!==t&&""object""==typeof t}function g(t){return Ui.call(t)===Ji}function _(t,e,i,n){Object.defineProperty(t,e,{value:i,enumerable:!!n,writable:!0,configurable:!0}",333
9,")}function y(t,e){var i,n,r,s,o,a=function a(){var h=Date.now()-s;h<e&&h>=0?i=setTimeout(a,e-h):(i=null,o=t.apply(r,n)",3
10,ready: function (),2
11,{,2
12,this.fetchEvents();,1
13,"},",1
14,No Code,1
15,methods: {,2
16,No Code,2
17,fetchEvents: function () {,2
18,var events = [];,3
19,this.$http.get('/api/events'),3
20,.success(function (events) {,3
21,"this.$set('events', events);",3
22,console.log(events);,2
23,},2
24,),2
25,.error(function (err),2
26,{,1
27,console.log(err);,2
28,});,2
29,"},",2
30,No Code,3
31,addEvent: function () {,3
32,if (this.event.title.trim()) {,3
33,"this.$http.post('/api/events', this.event)",3
34,.success(function (res) {,2
35,this.events.push(this.event);,2
36,console.log('Event added!');,2
37,}),2
38,.error(function (err) {,2
39,console.log(err);,1
40,});,5
41,},5
42,"},",5
43,No Code,9
44,deleteEvent: function (id) {,9
45,if (confirm('Are you sure you want to delete this event?')) {,13
46,this.$http.delete('api/events/' + id),9
47,.success(function (res) {,9
48,console.log(res);,5
49,var index = this.events.find(x => x.id === id),5
50,"this.events.splice(index, 1);",5
51,}),5
52,.error(function (err) {,5
53,console.log(err);,1
54,});,1
55,},1
